{"version":3,"sources":["common/index.jsx","reducers/tasks.jsx","reducers/taskEdited.jsx","reducers/taskFilter.jsx","reducers/taskSort.jsx","reducers/index.jsx","constants/index.jsx","reducers/taskSearch.jsx","reducers/isDisplayForm.jsx","actions/index.jsx","components/TaskForm/index.jsx","components/TaskItem/index.jsx","components/TaskList/index.jsx","components/TaskControls/Search.jsx","components/TaskControls/Sort.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["randomId","Math","floor","random","toString","generateId","join","tasksInCookies","localStorage","getItem","initialState","JSON","parse","id","name","status","by","value","rootReducer","reducerDict","_initialState","Object","keys","reduce","acc","curr","slice","undefined","type","getInitialState","state","action","combineReducers","tasks","task","trim","index","findIndex","item","common","push","setItem","stringify","splice","taskEdited","taskFilter","filter","taskSearch","keyword","taskSort","isDisplayForm","StoreContext","createContext","editTask","filterTable","TaskForm","store","useContext","dispatch","onSubmit","actions","onClose","onEdit","useState","setTask","onClear","onChange","event","target","field","useEffect","className","role","onClick","preventDefault","TaskItem","props","nowrap","TaskList","taskName","filterName","toLowerCase","indexOf","Boolean","sort","a","b","map","key","Search","setKeyword","placeholder","Sort","data-toggle","aria-labelledby","App","randomTasks","window","location","hostname","match","ReactDOM","render","useReducer","useStore","Provider","children","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6806d9a7.chunk.js","sourcesContent":["/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nconst randomId = () => Math.floor(Math.random() * 0x10000).toString(16);\r\nexport const generateId = () => [randomId(), randomId(), randomId()].join('-');\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\nimport * as common from '../common';\r\n\r\nconst tasksInCookies = localStorage.getItem('tasks');\r\nconst initialState = tasksInCookies ? JSON.parse(tasksInCookies) : [];\r\nconst tasks = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.SUBMIT_FORM:\r\n\t\t\tconst { task } = action;\r\n\t\t\ttask.name = task.name.trim();\r\n\t\t\tif (!task.id) {\r\n\t\t\t\ttask.id = common.generateId();\r\n\t\t\t\tstate.push(task);\r\n\t\t\t} else {\r\n\t\t\t\tvar index = state.findIndex(item => item.id == task.id);\r\n\t\t\t\tstate[index] = task;\r\n\t\t\t}\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn state;\r\n\t\tcase types.UPDATE_STATUS:\r\n\t\t\tvar index = state.findIndex(task => task.id == action.id);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tstate[index].status = !state[index].status;\r\n\t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\tcase types.RANDOM_TASKS:\r\n\t\t\tstate = action.tasks;\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn state;\r\n\t\tcase types.DELETE_TASK:\r\n\t\t\tvar index = state.findIndex(task => task.id == action.id);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tstate.splice(index, 1);\r\n\t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default tasks;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\n\r\nconst initialState = { id: '', name: '', status: false };\r\nconst taskEdited = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.EDIT_TASK:\r\n\t\t\treturn action.task;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default taskEdited;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\n\r\nconst initialState = { name: '', status: -1 };\r\nconst taskFilter = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.FILTER_TABLE:\r\n\t\t\treturn action.filter;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default taskFilter;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\n\r\nconst initialState = { by: 'name', value: 1 };\r\nconst taskSort = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.SORT_TABLE:\r\n\t\t\tvar { by, value } = action;\r\n\t\t\treturn { by, value };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default taskSort;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\n// Reference: https://gist.github.com/thchia/dd1bc8200fd8cff89cfa6c928983e5c4\r\n\r\nimport React, { createContext, useReducer } from 'react';\r\nimport tasks from './tasks';\r\nimport taskEdited from './taskEdited';\r\nimport taskFilter from './taskFilter';\r\nimport taskSearch from './taskSearch';\r\nimport taskSort from './taskSort';\r\nimport isDisplayForm from './isDisplayForm';\r\n\r\nconst getInitialState = reducerDict => {\r\n\treturn Object.keys(reducerDict).reduce((acc, curr) => {\r\n\t\tconst slice = reducerDict[curr](undefined, { type: undefined });\r\n\t\treturn { ...acc, [curr]: slice };\r\n\t}, {});\r\n};\r\n\r\nconst combineReducers = reducerDict => {\r\n\tconst _initialState = getInitialState(reducerDict);\r\n\treturn (state = _initialState, action) => {\r\n\t\treturn Object.keys(reducerDict).reduce((acc, curr) => {\r\n\t\t\tlet slice = reducerDict[curr](state[curr], action);\r\n\t\t\treturn { ...acc, [curr]: slice };\r\n\t\t}, state);\r\n\t};\r\n};\r\n\r\nconst useStore = (rootReducer, state) => {\r\n\tconst initialState = state || rootReducer(undefined, { type: undefined });\r\n\treturn useReducer(rootReducer, initialState);\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n\ttasks,\r\n\ttaskEdited,\r\n\ttaskFilter,\r\n\ttaskSearch,\r\n\ttaskSort,\r\n\tisDisplayForm\r\n});\r\n\r\nexport const StoreContext = createContext();\r\nexport const Provider = props => {\r\n\tconst [state, dispatch] = useStore(rootReducer);\r\n\treturn (\r\n\t\t<StoreContext.Provider value={{ state, dispatch }}>\r\n\t\t\t{props.children}\r\n\t\t</StoreContext.Provider>\r\n\t);\r\n};\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\r\n\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\nexport const RANDOM_TASKS = 'RANDOM_TASKS';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\nexport const SEARCH_TABLE = 'SEARCH_TABLE';\r\nexport const SORT_TABLE = 'SORT_TABLE';\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\n\r\nconst initialState = '';\r\nconst taskSearch = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.SEARCH_TABLE:\r\n\t\t\treturn action.keyword;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default taskSearch;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\n\r\nconst initialState = false;\r\nconst isDisplayForm = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.OPEN_FORM:\r\n\t\t\treturn true;\r\n\t\tcase types.CLOSE_FORM:\r\n\t\t\treturn false;\r\n\t\tcase types.TOGGLE_FORM:\r\n\t\t\treturn !state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default isDisplayForm;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport * as types from '../constants';\r\n\r\nexport const openForm = () => {\r\n\treturn { type: types.OPEN_FORM };\r\n};\r\n\r\nexport const closeForm = () => {\r\n\treturn { type: types.CLOSE_FORM };\r\n};\r\n\r\nexport const toggleForm = () => {\r\n\treturn { type: types.TOGGLE_FORM };\r\n};\r\n\r\nexport const submitForm = task => {\r\n\treturn { type: types.SUBMIT_FORM, task };\r\n};\r\n\r\nexport const updateStatus = id => {\r\n\treturn { type: types.UPDATE_STATUS, id };\r\n};\r\n\r\nexport const randomTasks = tasks => {\r\n\treturn { type: types.RANDOM_TASKS, tasks };\r\n};\r\n\r\nexport const editTask = task => {\r\n\treturn { type: types.EDIT_TASK, task };\r\n};\r\n\r\nexport const deleteTask = id => {\r\n\treturn { type: types.DELETE_TASK, id };\r\n};\r\n\r\nexport const filterTable = filter => {\r\n\treturn { type: types.FILTER_TABLE, filter };\r\n};\r\n\r\nexport const searchTable = keyword => {\r\n\treturn { type: types.SEARCH_TABLE, keyword };\r\n};\r\n\r\nexport const sortTable = (by, value) => {\r\n\treturn { type: types.SORT_TABLE, by, value };\r\n};\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { StoreContext } from '../../reducers';\r\nimport * as actions from '../../actions';\r\n\r\nfunction TaskForm() {\r\n\tconst store = useContext(StoreContext);\r\n\tconst { taskEdited, isDisplayForm } = store.state;\r\n\tconst dispatch = {\r\n\t\tonSubmit: task => store.dispatch(actions.submitForm(task)),\r\n\t\tonClose: () => store.dispatch(actions.closeForm()),\r\n\t\tonEdit: task => store.dispatch(actions.editTask(task))\r\n\t};\r\n\r\n\tconst [task, setTask] = useState({ id: '', name: '', status: false });\r\n\tconst onClear = () => setTask({ ...task, name: '', status: false });\r\n\r\n\tconst onChange = event => {\r\n\t\tvar target = event.target;\r\n\t\tvar field = target.name;\r\n\t\tvar value = target.value;\r\n\t\tvalue = field == 'status' ? value == 'true' : value;\r\n\t\tsetTask({ ...task, [field]: value });\r\n\t};\r\n\r\n\tconst onSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tif (task.name.trim()) {\r\n\t\t\tdispatch.onSubmit(task);\r\n\t\t\tdispatch.onEdit({ id: '', name: '', status: false });\r\n\t\t\tonClear();\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (taskEdited) {\r\n\t\t\tvar { id, name, status } = taskEdited;\r\n\t\t\tsetTask({ ...task, id, name, status });\r\n\t\t} else onClear();\r\n\t}, [taskEdited]);\r\n\r\n\tif (!isDisplayForm) return '';\r\n\treturn (\r\n\t\t<div className='panel panel-primary'>\r\n\t\t\t<div className='panel-heading'>\r\n\t\t\t\t<h3 className='panel-title'>\r\n\t\t\t\t\t{task.id == '' ? 'Add task' : 'Update task'}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName='fas fa-times-circle pull-right '\r\n\t\t\t\t\t\trole='button'\r\n\t\t\t\t\t\tonClick={dispatch.onClose}\r\n\t\t\t\t\t></span>\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className='panel-body'>\r\n\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label>Task name :</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={task.name}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<label>Status :</label>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tvalue={task.status}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value={true}>Finished</option>\r\n\t\t\t\t\t\t<option value={false}>Unfinished</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<div className='text-center'>\r\n\t\t\t\t\t\t<button type='submit' className='btn btn-success'>\r\n\t\t\t\t\t\t\t{task.id == '' ? (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-plus'></i>\r\n\t\t\t\t\t\t\t\t\t&nbsp; Add\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-sync-alt'></i>\r\n\t\t\t\t\t\t\t\t\t&nbsp; Update\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t\tonClick={onClear}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-times'></i>\r\n\t\t\t\t\t\t\t&nbsp; Clear\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskForm;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { StoreContext } from '../../reducers';\r\nimport * as actions from '../../actions';\r\n\r\nfunction TaskItem(props) {\r\n\tconst store = useContext(StoreContext);\r\n\tconst dispatch = {\r\n\t\tonOpenForm: () => store.dispatch(actions.openForm()),\r\n\t\tonUpdateStatus: id => store.dispatch(actions.updateStatus(id)),\r\n\t\tonEdit: task => store.dispatch(actions.editTask(task)),\r\n\t\tonDelete: id => store.dispatch(actions.deleteTask(id))\r\n\t};\r\n\r\n\tconst { index, task } = props;\r\n\tconst onUpdateStatus = () => {\r\n\t\tdispatch.onUpdateStatus(task.id);\r\n\t\tvar { id, name, status } = task;\r\n\t\tdispatch.onEdit({ id, name, status });\r\n\t};\r\n\r\n\tconst onEdit = () => {\r\n\t\tdispatch.onOpenForm();\r\n\t\tdispatch.onEdit(task);\r\n\t};\r\n\r\n\tconst onDelete = () => {\r\n\t\tdispatch.onDelete(task.id);\r\n\t\tdispatch.onEdit({ id: '', name: '', status: false });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td className='text-center'>\r\n\t\t\t\t<h5>{index + 1}</h5>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<h5>{task.name}</h5>\r\n\t\t\t</td>\r\n\t\t\t<td className='text-center'>\r\n\t\t\t\t<h5 onClick={onUpdateStatus}>\r\n\t\t\t\t\t{task.status ? (\r\n\t\t\t\t\t\t<span className='label label-success'>Finished</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className='label label-danger'>Unfinished</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</h5>\r\n\t\t\t</td>\r\n\t\t\t<td className='text-center' nowrap='nowrap'>\r\n\t\t\t\t<button type='button' className='btn btn-info' onClick={onEdit}>\r\n\t\t\t\t\t<i className='far fa-edit'></i>&nbsp; Edit\r\n\t\t\t\t</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\tonClick={onDelete}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className='far fa-trash-alt'></i>&nbsp; Delete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default TaskItem;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { StoreContext } from '../../reducers';\r\nimport * as actions from '../../actions';\r\nimport TaskItem from '../TaskItem';\r\n\r\nfunction TaskList() {\r\n\tconst store = useContext(StoreContext);\r\n\tconst { tasks, taskFilter, taskSort } = store.state;\r\n\tconst dispatch = {\r\n\t\tonFilter: filter => store.dispatch(actions.filterTable(filter))\r\n\t};\r\n\r\n\tconst onChange = event => {\r\n\t\tvar target = event.target;\r\n\t\tvar field = target.name;\r\n\t\tvar value = target.value;\r\n\t\tvalue = field == 'status' ? +value : value;\r\n\t\tdispatch.onFilter({ ...taskFilter, [field]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<table className='table table-striped table-bordered table-hover'>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th className='text-center'>Id</th>\r\n\t\t\t\t\t<th className='text-center'>Task name</th>\r\n\t\t\t\t\t<th className='text-center'>Status</th>\r\n\t\t\t\t\t<th className='text-center'>Actions</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td className='text-center'>\r\n\t\t\t\t\t\t<h5>0</h5>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={taskFilter.name}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tvalue={taskFilter.status}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='-1'>All</option>\r\n\t\t\t\t\t\t\t<option value='1'>Finished</option>\r\n\t\t\t\t\t\t\t<option value='0'>Unfinished</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td className='text-center'>\r\n\t\t\t\t\t\t<button type='button' className='btn btn-warning'>\r\n\t\t\t\t\t\t\t<i className='fas fa-exchange-alt'></i>\r\n\t\t\t\t\t\t\t&nbsp; Change theme\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{tasks\r\n\t\t\t\t\t.filter(task => {\r\n\t\t\t\t\t\tvar taskName = task.name;\r\n\t\t\t\t\t\tvar filterName = taskFilter.name;\r\n\t\t\t\t\t\ttaskName = taskName ? taskName.toLowerCase() : '';\r\n\t\t\t\t\t\tfilterName = filterName ? filterName.toLowerCase() : '';\r\n\t\t\t\t\t\treturn taskName.indexOf(filterName) != -1;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.filter(task => {\r\n\t\t\t\t\t\tif (taskFilter.status == -1) return task;\r\n\t\t\t\t\t\treturn task.status == Boolean(taskFilter.status);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\t\tif (taskSort.by == 'name') {\r\n\t\t\t\t\t\t\tif (a.name > b.name) return taskSort.value;\r\n\t\t\t\t\t\t\tif (a.name < b.name) return -taskSort.value;\r\n\t\t\t\t\t\t\telse return 0;\r\n\t\t\t\t\t\t} else if (taskSort.by == 'status') {\r\n\t\t\t\t\t\t\tif (a.status > b.status) return -taskSort.value;\r\n\t\t\t\t\t\t\tif (a.status < b.status) return taskSort.value;\r\n\t\t\t\t\t\t\telse return 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map((task, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TaskItem key={task.id} index={index} task={task} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\nexport default TaskList;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { StoreContext } from '../../reducers';\r\nimport * as actions from '../../actions';\r\n\r\nfunction Search() {\r\n\tconst store = useContext(StoreContext);\r\n\tconst { taskFilter, taskSearch } = store.state;\r\n\tconst dispatch = {\r\n\t\tonSearch: keyword => store.dispatch(actions.searchTable(keyword)),\r\n\t\tonFilter: filter => store.dispatch(actions.filterTable(filter))\r\n\t};\r\n\r\n\tconst [keyword, setKeyword] = useState('');\r\n\r\n\tconst onSearch = () => {\r\n\t\tdispatch.onFilter({ ...taskFilter, name: taskSearch });\r\n\t};\r\n\r\n\tconst onChange = event => {\r\n\t\tvar target = event.target;\r\n\t\tvar value = target.value;\r\n\t\tsetKeyword(value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch.onSearch(keyword.toLowerCase().trim());\r\n\t}, [keyword]);\r\n\r\n\treturn (\r\n\t\t<div className='input-group'>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tname='keyword'\r\n\t\t\t\tclassName='form-control'\r\n\t\t\t\tvalue={keyword}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tplaceholder='Type to search ...'\r\n\t\t\t/>\r\n\t\t\t<span className='input-group-btn'>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tclassName='btn btn-primary'\r\n\t\t\t\t\tonClick={onSearch}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className='fas fa-search'></i>\r\n\t\t\t\t</button>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Search;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { StoreContext } from '../../reducers';\r\nimport * as actions from '../../actions';\r\n\r\nfunction Sort() {\r\n\tconst store = useContext(StoreContext);\r\n\tconst { taskSort } = store.state;\r\n\tconst dispatch = {\r\n\t\tonSort: (by, value) => store.dispatch(actions.sortTable(by, value))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dropdown'>\r\n\t\t\t<button\r\n\t\t\t\tclassName='btn btn-primary dropdown-toggle'\r\n\t\t\t\ttype='button'\r\n\t\t\t\tid='sortMenu'\r\n\t\t\t\tdata-toggle='dropdown'\r\n\t\t\t>\r\n\t\t\t\tSort by &nbsp;<i className='far fa-caret-square-down'></i>\r\n\t\t\t</button>\r\n\t\t\t<ul className='dropdown-menu' aria-labelledby='sortMenu'>\r\n\t\t\t\t<li onClick={() => dispatch.onSort('name', 1)}>\r\n\t\t\t\t\t<a role='button'>\r\n\t\t\t\t\t\t<i className='fas fa-sort-alpha-down'>\r\n\t\t\t\t\t\t\t&emsp; A - Z &emsp;\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t{taskSort.by == 'name' && taskSort.value == 1 && (\r\n\t\t\t\t\t\t\t<i className='fas fa-check'></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li onClick={() => dispatch.onSort('name', -1)}>\r\n\t\t\t\t\t<a role='button'>\r\n\t\t\t\t\t\t<i className='fas fa-sort-alpha-down-alt'>\r\n\t\t\t\t\t\t\t&emsp; Z - A &emsp;\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t{taskSort.by == 'name' && taskSort.value == -1 && (\r\n\t\t\t\t\t\t\t<i className='fas fa-check'></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li role='separator' className='divider'></li>\r\n\t\t\t\t<li onClick={() => dispatch.onSort('status', 1)}>\r\n\t\t\t\t\t<a role='button'>\r\n\t\t\t\t\t\tFinished &emsp;\r\n\t\t\t\t\t\t{taskSort.by == 'status' && taskSort.value == 1 && (\r\n\t\t\t\t\t\t\t<i className='fas fa-check'></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li onClick={() => dispatch.onSort('status', -1)}>\r\n\t\t\t\t\t<a role='button'>\r\n\t\t\t\t\t\tUnfinished &emsp;\r\n\t\t\t\t\t\t{taskSort.by == 'status' && taskSort.value == -1 && (\r\n\t\t\t\t\t\t\t<i className='fas fa-check'></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Sort;\r\n\r\n/* eslint-enable */\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { StoreContext } from './reducers';\r\nimport * as actions from './actions';\r\nimport * as common from './common';\r\n\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport { SearchCtrl, SortCtrl } from './components/TaskControls';\r\n\r\nfunction App() {\r\n\tconst store = useContext(StoreContext);\r\n\tconst { tasks, taskEdited, isDisplayForm } = store.state;\r\n\tconst dispatch = {\r\n\t\tonOpenForm: () => store.dispatch(actions.openForm()),\r\n\t\tonToggleForm: () => store.dispatch(actions.toggleForm()),\r\n\t\tonRandomTasks: tasks => store.dispatch(actions.randomTasks(tasks)),\r\n\t\tonEditTask: task => store.dispatch(actions.editTask(task))\r\n\t};\r\n\r\n\tconst onToggleForm = () => {\r\n\t\tif (taskEdited && taskEdited.id != '') dispatch.onOpenForm();\r\n\t\telse dispatch.onToggleForm();\r\n\t\tdispatch.onEditTask({ id: '', name: '', status: false });\r\n\t};\r\n\r\n\tconst onGenerateTasks = () => {\r\n\t\tvar randomTasks = [\r\n\t\t\t{ id: common.generateId(), name: '1 vợ', status: true },\r\n\t\t\t{ id: common.generateId(), name: '2 con', status: false },\r\n\t\t\t{ id: common.generateId(), name: '3 lầu', status: false },\r\n\t\t\t{ id: common.generateId(), name: '4 bánh', status: true },\r\n\t\t\t{ id: common.generateId(), name: '5 sao', status: false },\r\n\t\t\t{ id: common.generateId(), name: '6 số', status: true }\r\n\t\t];\r\n\t\tdispatch.onRandomTasks([...tasks, ...randomTasks]);\r\n\t};\r\n\r\n\tconst onDeleteAllTasks = () => dispatch.onRandomTasks([]);\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='text-center'>\r\n\t\t\t\t<h1>Tasks Management</h1>\r\n\t\t\t\t<hr />\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm-4 col-md-4 col-lg-4 visible-sm-block visible-md-block visible-lg-block'>\r\n\t\t\t\t\t<TaskForm />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tisDisplayForm\r\n\t\t\t\t\t\t\t? 'col-sm-8 col-md-8 col-lg-8 '\r\n\t\t\t\t\t\t\t: 'col-sm-12 col-md-12 col-lg-12 col-xs-12'\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName='btn btn-primary'\r\n\t\t\t\t\t\tonClick={onToggleForm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fas fa-plus'></i>\r\n\t\t\t\t\t\t&nbsp; Add task\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName='btn btn-success'\r\n\t\t\t\t\t\tonClick={onGenerateTasks}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fas fa-random'></i>\r\n\t\t\t\t\t\t&nbsp; Generate tasks\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\tonClick={onDeleteAllTasks}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='far fa-calendar-times'></i>\r\n\t\t\t\t\t\t&nbsp; Delete all tasks\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='col-xs-12 visible-xs-block'>\r\n\t\t\t\t\t\t\t<TaskForm />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-xs-7 col-sm-8 col-md-8 col-lg-8'>\r\n\t\t\t\t\t\t\t<SearchCtrl />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-xs-5 col-sm-4 col-md-4 col-lg-4'>\r\n\t\t\t\t\t\t\t<SortCtrl />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className='col-xs-12 col-sm-12 col-md-12 col-lg-12'>\r\n\t\t\t\t\t\t\t<TaskList />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n/* eslint-enable */\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* jshint esversion: 9 */\r\n/* eslint-disable */\r\n\r\nimport React, { createContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from './reducers';\r\n\r\nReactDOM.render(\r\n\t<Provider>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n/* eslint-enable */\r\n"],"sourceRoot":""}